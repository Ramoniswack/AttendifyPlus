<?php

/**
 * Device Registration API for Students
 * Allows students to register their devices using tokens generated by admins
 */

require_once(__DIR__ . '/../config/db_config.php');

header('Content-Type: application/json');
header('Access-Control-Allow-Origin: *');
header('Access-Control-Allow-Methods: POST');
header('Access-Control-Allow-Headers: Content-Type');

// Enable error logging
error_reporting(E_ALL);
ini_set('display_errors', 0);
ini_set('log_errors', 1);

if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
    echo json_encode(['success' => false, 'error' => 'Invalid request method']);
    exit();
}

try {
    // Get POST data
    $token = $_POST['token'] ?? '';
    $fingerprint = $_POST['fingerprint'] ?? '';
    $deviceName = $_POST['device_name'] ?? '';
    $userAgent = $_POST['user_agent'] ?? $_SERVER['HTTP_USER_AGENT'] ?? '';

    // Validate required fields
    if (empty($token) || empty($fingerprint)) {
        echo json_encode(['success' => false, 'error' => 'Token and device fingerprint are required']);
        exit();
    }

    // Start transaction
    $conn->begin_transaction();

    try {
        // Find valid token and get student info
        $tokenStmt = $conn->prepare("
            SELECT t.TokenID, t.StudentID, t.Used, t.ExpiresAt, s.FullName, s.DeviceRegistered
            FROM device_registration_tokens t
            JOIN students s ON t.StudentID = s.StudentID
            WHERE t.Token = ? AND t.Used = FALSE AND t.ExpiresAt > NOW()
        ");
        $tokenStmt->bind_param("s", $token);
        $tokenStmt->execute();
        $tokenResult = $tokenStmt->get_result();
        $tokenData = $tokenResult->fetch_assoc();

        if (!$tokenData) {
            throw new Exception('Invalid or expired token');
        }

        if ($tokenData['DeviceRegistered']) {
            throw new Exception('Student already has a device registered');
        }

        // Check if this device fingerprint is already registered to another student
        $existingDeviceStmt = $conn->prepare("
            SELECT sd.StudentID, s.FullName
            FROM student_devices sd
            JOIN students s ON sd.StudentID = s.StudentID
            WHERE sd.DeviceFingerprint = ? AND sd.IsActive = TRUE
        ");
        $existingDeviceStmt->bind_param("s", $fingerprint);
        $existingDeviceStmt->execute();
        $existingDevice = $existingDeviceStmt->get_result()->fetch_assoc();

        if ($existingDevice) {
            throw new Exception('This device is already registered to another student (' . $existingDevice['FullName'] . '). Each student must use their own device.');
        }

        // Generate device name if not provided
        if (empty($deviceName)) {
            $deviceName = 'Device-' . substr($fingerprint, 0, 8);
        }

        // Prepare device info
        $deviceInfo = json_encode([
            'user_agent' => $userAgent,
            'registered_at' => date('Y-m-d H:i:s'),
            'ip_address' => $_SERVER['REMOTE_ADDR'] ?? 'unknown'
        ]);

        // Register the device
        $insertDeviceStmt = $conn->prepare("
            INSERT INTO student_devices (StudentID, DeviceFingerprint, DeviceName, DeviceInfo, RegisteredAt) 
            VALUES (?, ?, ?, ?, NOW())
        ");
        $insertDeviceStmt->bind_param("isss", $tokenData['StudentID'], $fingerprint, $deviceName, $deviceInfo);

        if (!$insertDeviceStmt->execute()) {
            throw new Exception('Failed to register device');
        }

        // Mark token as used
        $updateTokenStmt = $conn->prepare("
            UPDATE device_registration_tokens 
            SET Used = TRUE 
            WHERE TokenID = ?
        ");
        $updateTokenStmt->bind_param("i", $tokenData['TokenID']);

        if (!$updateTokenStmt->execute()) {
            throw new Exception('Failed to update token status');
        }

        // Update student record to mark device as registered
        $updateStudentStmt = $conn->prepare("
            UPDATE students 
            SET DeviceRegistered = TRUE 
            WHERE StudentID = ?
        ");
        $updateStudentStmt->bind_param("i", $tokenData['StudentID']);

        if (!$updateStudentStmt->execute()) {
            throw new Exception('Failed to update student record');
        }

        // Commit transaction
        $conn->commit();

        echo json_encode([
            'success' => true,
            'message' => 'Device registered successfully! You can now use QR code attendance.',
            'student_name' => $tokenData['FullName'],
            'device_name' => $deviceName
        ]);
    } catch (Exception $e) {
        $conn->rollback();
        throw $e;
    }
} catch (Exception $e) {
    error_log("Device registration error: " . $e->getMessage());
    echo json_encode(['success' => false, 'error' => $e->getMessage()]);
}
