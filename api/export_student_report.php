<?php
session_start();
require_once(__DIR__ . '/../config/db_config.php');

// Check session
if (!isset($_SESSION['UserID']) || strtolower($_SESSION['Role']) !== 'teacher') {
    header("Location: ../views/auth/login.php");
    exit();
}

$loginID = $_SESSION['LoginID'];

// Get teacher info
$teacherStmt = $conn->prepare("SELECT TeacherID, FullName FROM teachers WHERE LoginID = ?");
$teacherStmt->bind_param("i", $loginID);
$teacherStmt->execute();
$teacherRes = $teacherStmt->get_result();
$teacherRow = $teacherRes->fetch_assoc();

if (!$teacherRow) {
    header("Location: ../views/logout.php");
    exit();
}

$teacherID = $teacherRow['TeacherID'];

// Get parameters
$subjectID = $_GET['subject'] ?? null;
$studentID = $_GET['student'] ?? null;

if (!$subjectID || !$studentID) {
    die("Missing required parameters");
}

// Verify teacher has access to this subject
$subjectCheck = $conn->prepare("
    SELECT s.SubjectID, s.SubjectCode, s.SubjectName 
    FROM subjects s
    JOIN teacher_subject_map tsm ON s.SubjectID = tsm.SubjectID
    WHERE tsm.TeacherID = ? AND s.SubjectID = ?
");
$subjectCheck->bind_param("ii", $teacherID, $subjectID);
$subjectCheck->execute();
$subjectResult = $subjectCheck->get_result();
$subject = $subjectResult->fetch_assoc();

if (!$subject) {
    die("Access denied to this subject");
}

// Get student info
$studentQuery = $conn->prepare("
    SELECT s.StudentID, s.FullName, s.Contact, d.DepartmentName, sem.SemesterNumber
    FROM students s
    JOIN departments d ON s.DepartmentID = d.DepartmentID
    JOIN semesters sem ON s.SemesterID = sem.SemesterID
    WHERE s.StudentID = ?
");
$studentQuery->bind_param("i", $studentID);
$studentQuery->execute();
$studentResult = $studentQuery->get_result();
$student = $studentResult->fetch_assoc();

if (!$student) {
    die("Student not found");
}

// Get attendance data
$attendanceQuery = $conn->prepare("
    SELECT 
        ar.DateTime,
        ar.Status,
        ar.Method,
        DATE(ar.DateTime) as Date,
        TIME(ar.DateTime) as Time
    FROM attendance_records ar
    WHERE ar.StudentID = ? AND ar.SubjectID = ? AND ar.TeacherID = ?
    ORDER BY ar.DateTime DESC
");
$attendanceQuery->bind_param("iii", $studentID, $subjectID, $teacherID);
$attendanceQuery->execute();
$attendanceResult = $attendanceQuery->get_result();
$attendanceRecords = [];
while ($row = $attendanceResult->fetch_assoc()) {
    $attendanceRecords[] = $row;
}

// Get assignment data
$assignmentQuery = $conn->prepare("
    SELECT 
        a.Title,
        a.DueDate,
        a.MaxPoints,
        s.SubmittedAt,
        s.Status,
        s.Grade,
        s.IsLate,
        s.Feedback
    FROM assignments a
    LEFT JOIN assignment_submissions s ON a.AssignmentID = s.AssignmentID AND s.StudentID = ?
    WHERE a.SubjectID = ? AND a.TeacherID = ?
    ORDER BY a.DueDate DESC
");
$assignmentQuery->bind_param("iii", $studentID, $subjectID, $teacherID);
$assignmentQuery->execute();
$assignmentResult = $assignmentQuery->get_result();
$assignments = [];
while ($row = $assignmentResult->fetch_assoc()) {
    $assignments[] = $row;
}

// Calculate statistics
$totalSessions = count($attendanceRecords);
$presentCount = 0;
$absentCount = 0;
$lateCount = 0;
$qrCount = 0;
$manualCount = 0;

foreach ($attendanceRecords as $record) {
    if ($record['Status'] == 'present') $presentCount++;
    elseif ($record['Status'] == 'absent') $absentCount++;
    elseif ($record['Status'] == 'late') $lateCount++;

    if ($record['Method'] == 'qr') $qrCount++;
    elseif ($record['Method'] == 'manual') $manualCount++;
}

$attendancePercentage = $totalSessions > 0 ? round(($presentCount / $totalSessions) * 100, 2) : 0;

// Set headers for CSV download
$filename = "Student_Report_" . $student['FullName'] . "_" . $subject['SubjectCode'] . "_" . date('Y-m-d') . ".csv";
header('Content-Type: text/csv');
header('Content-Disposition: attachment; filename="' . $filename . '"');
header('Pragma: no-cache');
header('Expires: 0');

// Create CSV file
$output = fopen('php://output', 'w');

// Write header
fputcsv($output, ['STUDENT ANALYTICS REPORT']);
fputcsv($output, ['Generated on: ' . date('Y-m-d H:i:s')]);
fputcsv($output, ['Generated by: ' . $teacherRow['FullName']]);
fputcsv($output, []);

// Student Information
fputcsv($output, ['STUDENT INFORMATION']);
fputcsv($output, ['Name', $student['FullName']]);
fputcsv($output, ['Contact', $student['Contact']]);
fputcsv($output, ['Department', $student['DepartmentName']]);
fputcsv($output, ['Semester', $student['SemesterNumber']]);
fputcsv($output, []);

// Subject Information
fputcsv($output, ['SUBJECT INFORMATION']);
fputcsv($output, ['Subject Code', $subject['SubjectCode']]);
fputcsv($output, ['Subject Name', $subject['SubjectName']]);
fputcsv($output, []);

// Attendance Summary
fputcsv($output, ['ATTENDANCE SUMMARY']);
fputcsv($output, ['Total Sessions', $totalSessions]);
fputcsv($output, ['Present', $presentCount]);
fputcsv($output, ['Absent', $absentCount]);
fputcsv($output, ['Late', $lateCount]);
fputcsv($output, ['Attendance Percentage', $attendancePercentage . '%']);
fputcsv($output, ['QR Code Attendance', $qrCount]);
fputcsv($output, ['Manual Attendance', $manualCount]);
fputcsv($output, []);

// Attendance Records
fputcsv($output, ['ATTENDANCE RECORDS']);
fputcsv($output, ['Date', 'Time', 'Status', 'Method']);

foreach ($attendanceRecords as $record) {
    fputcsv($output, [
        $record['Date'],
        $record['Time'],
        ucfirst($record['Status']),
        ucfirst($record['Method'])
    ]);
}
fputcsv($output, []);

// Assignment Performance
fputcsv($output, ['ASSIGNMENT PERFORMANCE']);
fputcsv($output, ['Assignment', 'Due Date', 'Submitted', 'Status', 'Grade', 'Percentage', 'Late']);

$totalAssignments = 0;
$submittedAssignments = 0;
$gradedAssignments = 0;
$totalGrade = 0;

foreach ($assignments as $assignment) {
    $totalAssignments++;
    $grade = $assignment['Grade'] ?? 0;
    $maxGrade = $assignment['MaxPoints'] ?? 100;
    $percentage = $maxGrade > 0 ? round(($grade / $maxGrade) * 100, 2) : 0;
    
    if ($assignment['SubmittedAt']) {
        $submittedAssignments++;
    }
    
    if ($assignment['Status'] == 'graded') {
        $gradedAssignments++;
        $totalGrade += $grade;
    }
    
    fputcsv($output, [
        $assignment['Title'],
        $assignment['DueDate'] ? date('Y-m-d', strtotime($assignment['DueDate'])) : 'N/A',
        $assignment['SubmittedAt'] ? date('Y-m-d', strtotime($assignment['SubmittedAt'])) : 'Not Submitted',
        ucfirst($assignment['Status'] ?? 'Not Submitted'),
        $grade > 0 ? $grade . '/' . $maxGrade : 'N/A',
        $percentage > 0 ? $percentage . '%' : 'N/A',
        $assignment['IsLate'] ? 'Yes' : 'No'
    ]);
}

fputcsv($output, []);

// Assignment Summary
fputcsv($output, ['ASSIGNMENT SUMMARY']);
fputcsv($output, ['Total Assignments', $totalAssignments]);
fputcsv($output, ['Submitted', $submittedAssignments]);
fputcsv($output, ['Submission Rate', $totalAssignments > 0 ? round(($submittedAssignments / $totalAssignments) * 100, 2) . '%' : '0%']);
fputcsv($output, ['Graded', $gradedAssignments]);
fputcsv($output, ['Average Grade', $gradedAssignments > 0 ? round($totalGrade / $gradedAssignments, 2) : 'N/A']);

fclose($output);
exit();
?> 